import { DocumentType, Status, UserRole, FlowDirection, EntityType } from './types.js';

export const INITIAL_DOCUMENTS = [
    {
        id: 1,
        dateIssued: '2025-01-07',
        supplierName: 'Supplier A',
        documentType: DocumentType.QUOTE,
        documentNumber: 'Q-001',
        relatedQuote: 'N/A',
        relatedPO: 'PO-001',
        relatedInvoice: 'INV-001',
        status: Status.SENT,
        notes: 'Initial quote for project X.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 2,
        dateIssued: '2025-01-05',
        supplierName: 'Supplier A',
        documentType: DocumentType.PO,
        documentNumber: 'PO-001',
        relatedQuote: 'Q-001',
        relatedPO: 'N/A',
        relatedInvoice: 'INV-001',
        status: Status.CONFIRMED,
        notes: '',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 3,
        dateIssued: '2025-01-10',
        supplierName: 'Supplier A',
        documentType: DocumentType.INVOICE,
        documentNumber: 'INV-001',
        relatedQuote: 'Q-001',
        relatedPO: 'PO-001',
        relatedInvoice: 'N/A',
        status: Status.PAID,
        notes: 'Payment completed via wire transfer.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 4,
        dateIssued: '2025-01-02',
        supplierName: 'Supplier B',
        documentType: DocumentType.QUOTE,
        documentNumber: 'Q-002',
        relatedQuote: 'N/A',
        relatedPO: '',
        relatedInvoice: '',
        status: Status.ACCEPTED,
        notes: 'Quote for new office supplies, waiting for PO.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 5,
        dateIssued: '2025-01-06',
        supplierName: 'Supplier B',
        documentType: DocumentType.PO,
        documentNumber: 'PO-002',
        relatedQuote: 'Q-002',
        relatedPO: 'N/A',
        relatedInvoice: 'INV-002',
        status: Status.PENDING,
        notes: 'Awaiting stock confirmation.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 6,
        dateIssued: '2025-01-11',
        supplierName: 'Supplier B',
        documentType: DocumentType.INVOICE,
        documentNumber: 'INV-002',
        relatedQuote: 'Q-002',
        relatedPO: 'PO-002',
        relatedInvoice: 'N/A',
        status: Status.DUE,
        notes: 'Payment due in 15 days.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 7,
        dateIssued: '2025-01-15',
        supplierName: 'Supplier C',
        documentType: DocumentType.REQUISITION,
        documentNumber: 'REQ-001',
        relatedQuote: 'Q-003',
        relatedPO: 'PO-003',
        relatedInvoice: 'INV-003',
        status: Status.ACCEPTED,
        notes: 'Requisition for new server hardware.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 8,
        dateIssued: '2025-01-16',
        supplierName: 'Supplier D',
        documentType: DocumentType.REQUISITION,
        documentNumber: 'REQ-002',
        relatedQuote: '',
        relatedPO: '',
        relatedInvoice: '',
        status: Status.PENDING,
        notes: 'Requisition for office chairs, waiting for quotes.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 9,
        dateIssued: '2025-01-18',
        supplierName: 'Supplier C',
        documentType: DocumentType.QUOTE,
        documentNumber: 'Q-003',
        relatedQuote: 'N/A',
        relatedPO: 'PO-003',
        relatedInvoice: 'INV-003',
        status: Status.SENT,
        notes: 'Quote for server hardware based on REQ-001.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 10,
        dateIssued: '2025-01-20',
        supplierName: 'Supplier C',
        documentType: DocumentType.PO,
        documentNumber: 'PO-003',
        relatedQuote: 'Q-003',
        relatedPO: 'N/A',
        relatedInvoice: '',
        status: Status.CONFIRMED,
        notes: 'PO for server hardware, waiting for invoice.',
        flowDirection: FlowDirection.INBOUND,
    },
    {
        id: 11,
        dateIssued: '2025-01-25',
        supplierName: 'Supplier C',
        documentType: DocumentType.INVOICE,
        documentNumber: 'INV-003',
        relatedQuote: 'Q-003',
        relatedPO: 'PO-003',
        relatedInvoice: 'N/A',
        status: Status.DUE,
        notes: 'Invoice for server hardware, payment due.',
        flowDirection: FlowDirection.INBOUND,
    },
    // Outbound (Sales) documents
    {
        id: 12,
        dateIssued: '2025-02-01',
        supplierName: 'Client X',
        documentType: DocumentType.REQUISITION,
        documentNumber: 'CR-100',
        relatedQuote: '',
        relatedPO: '',
        relatedInvoice: '',
        status: Status.PENDING,
        notes: 'Client request for pricing on 50 safety helmets.',
        flowDirection: FlowDirection.OUTBOUND,
    },
    {
        id: 13,
        dateIssued: '2025-02-02',
        supplierName: 'Client Y',
        documentType: DocumentType.QUOTE,
        documentNumber: 'JMS-Q-500',
        relatedQuote: 'N/A',
        relatedPO: '',
        relatedInvoice: '',
        status: Status.ACCEPTED,
        notes: 'Client accepted quote for machine parts. Waiting for their PO.',
        flowDirection: FlowDirection.OUTBOUND,
    },
    {
        id: 14,
        dateIssued: '2025-02-05',
        supplierName: 'Client Z',
        documentType: DocumentType.PO,
        documentNumber: 'CPO-987',
        relatedQuote: 'JMS-Q-501',
        relatedPO: 'N/A',
        relatedInvoice: '',
        status: Status.CONFIRMED,
        notes: 'Received PO for consulting services. Invoice to be generated.',
        flowDirection: FlowDirection.OUTBOUND,
    }
];

const uniqueEntities = new Map();
INITIAL_DOCUMENTS.forEach(doc => {
    const type = doc.flowDirection === FlowDirection.INBOUND ? EntityType.SUPPLIER : EntityType.CLIENT;
    if (!uniqueEntities.has(doc.supplierName.toLowerCase())) {
        uniqueEntities.set(doc.supplierName.toLowerCase(), {
            name: doc.supplierName,
            type: type,
        });
    }
});

export const INITIAL_ENTITIES = Array.from(uniqueEntities.values()).map((entity, index) => ({
    id: index + 1,
    name: entity.name,
    type: entity.type,
}));

export const STATUS_COLORS = {
    [Status.SENT]: 'bg-blue-100 text-blue-800 dark:bg-blue-900/60 dark:text-blue-300',
    [Status.CONFIRMED]: 'bg-green-100 text-green-800 dark:bg-green-900/60 dark:text-green-300',
    [Status.PAID]: 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/60 dark:text-emerald-300',
    [Status.ACCEPTED]: 'bg-purple-100 text-purple-800 dark:bg-purple-900/60 dark:text-purple-300',
    [Status.PENDING]: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/60 dark:text-yellow-300',
    [Status.DUE]: 'bg-red-100 text-red-800 dark:bg-red-900/60 dark:text-red-300'
};

export const INITIAL_USERS = [
    { id: 1, name: 'Admin User', email: 'admin@jachrismining.com', role: UserRole.ADMIN, googleId: 'google-id-admin' },
    { id: 2, name: 'John Doe', email: 'john.doe@jachrismining.com', role: UserRole.USER, googleId: 'google-id-john' },
    { id: 3, name: 'Jane Smith', email: 'jane.smith@jachrismining.com', role: UserRole.USER, googleId: 'google-id-jane' },
];

export const INITIAL_LOGS = [
    { id: 1, timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), user: 'Admin User', action: 'Created Document', details: 'Invoice #INV-002 for Supplier B' },
    { id: 2, timestamp: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(), user: 'John Doe', action: 'Updated Status', details: 'PO #PO-001 to Confirmed' },
    { id: 3, timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), user: 'Admin User', action: 'User Login', details: 'Admin User logged in' },
];